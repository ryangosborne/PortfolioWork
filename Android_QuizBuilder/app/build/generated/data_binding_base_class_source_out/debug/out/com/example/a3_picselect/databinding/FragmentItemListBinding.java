// Generated by view binder compiler. Do not edit!
package com.example.a3_picselect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.a3_picselect.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentItemListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final FloatingActionButton fabToDB;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final Guideline guideline;

  @NonNull
  public final RecyclerView itemList;

  @NonNull
  public final ConstraintLayout itemListContainer;

  private FragmentItemListBinding(@NonNull ConstraintLayout rootView,
      @Nullable FloatingActionButton fabToDB, @Nullable Guideline guideline,
      @NonNull RecyclerView itemList, @NonNull ConstraintLayout itemListContainer) {
    this.rootView = rootView;
    this.fabToDB = fabToDB;
    this.guideline = guideline;
    this.itemList = itemList;
    this.itemListContainer = itemListContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_item_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentItemListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fab_toDB;
      FloatingActionButton fabToDB = ViewBindings.findChildViewById(rootView, id);

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);

      id = R.id.item_list;
      RecyclerView itemList = ViewBindings.findChildViewById(rootView, id);
      if (itemList == null) {
        break missingId;
      }

      ConstraintLayout itemListContainer = (ConstraintLayout) rootView;

      return new FragmentItemListBinding((ConstraintLayout) rootView, fabToDB, guideline, itemList,
          itemListContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
